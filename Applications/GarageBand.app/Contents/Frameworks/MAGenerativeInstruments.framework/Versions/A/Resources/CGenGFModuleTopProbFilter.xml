<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>nodeAttributes</key>
	<dict>
		<key>name</key>
		<string>Top Prob Filter</string>
		<key>description</key>
		<string>Filters patterns by highest probability. Filters a vector of patterns to contain only the patterns with the highest probability.
MinRequiredPatterns specifies how many patterns have to be found.
This depends on the step count as follows:
If the step count e.g. is 10, we have 10 probablity steps that will be searched: 100, 90, 80, 70, 60, 50, 40, 30, 20, 10.
At first, all patterns that match 100 percent are kept. If at least MinRequiredPatterns or more are found, the search is aborted.
If not enough patterns where found, the search contiues to find all patterns that have a probablility with more than 90 and so forth.</string>
	</dict>
	<key>inputAttributes</key>
	<dict>
		<key>inputPatterns</key>
		<dict>
			<key>description</key>
			<string>vector of patterns</string>
			<key>name</key>
			<string>Patterns</string>
		</dict>
		<key>inputMinRequiredPatters</key>
		<dict>
			<key>description</key>
			<string>MinRequiredPatterns specifies how many patterns have to be found.</string>
			<key>name</key>
			<string>Min Required Patterns</string>
		</dict>
		<key>inputStepCount</key>
		<dict>
			<key>description</key>
			<string>If the step count e.g. is 10, we have 10 probablity steps that will be searched: 100, 90, 80, 70, 60, 50, 40, 30, 20, 10.</string>
			<key>name</key>
			<string>Step Count</string>
		</dict>		
	</dict>
	<key>outputAttributes</key>
	<dict>
		<key>outputPatterns</key>
		<dict>
			<key>description</key>
			<string>vector of patterns</string>
			<key>name</key>
			<string>Patterns</string>
		</dict>
	</dict>
</dict>
</plist>
